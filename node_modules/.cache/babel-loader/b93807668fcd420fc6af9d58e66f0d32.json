{"ast":null,"code":"var _jsxFileName = \"/Users/mosesmadavaram/Downloads/ramp-fe-challenge 2/src/App.tsx\",\n    _s = $RefreshSig$();\n\nimport { Fragment, useCallback, useEffect, useMemo, useState } from \"react\";\nimport { InputSelect } from \"./components/InputSelect\";\nimport { Instructions } from \"./components/Instructions\";\nimport { Transactions } from \"./components/Transactions\";\nimport { useEmployees } from \"./hooks/useEmployees\";\nimport { usePaginatedTransactions } from \"./hooks/usePaginatedTransactions\";\nimport { useTransactionsByEmployee } from \"./hooks/useTransactionsByEmployee\";\nimport { EMPTY_EMPLOYEE } from \"./utils/constants\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function App() {\n  _s();\n\n  const {\n    data: employees,\n    ...employeeUtils\n  } = useEmployees(); // @ts-ignore\n\n  const {\n    data: paginatedTransactions,\n    moreAvailable: morePaginated,\n    ...paginatedTransactionsUtils\n  } = usePaginatedTransactions();\n  const {\n    data: transactionsByEmployee,\n    ...transactionsByEmployeeUtils\n  } = useTransactionsByEmployee();\n  const [isLoading, setIsLoading] = useState(false);\n  const [filterbyemployee, setfilterbyemployee] = useState(false);\n  const transactions = useMemo(() => {\n    var _ref, _paginatedTransaction;\n\n    return (_ref = (_paginatedTransaction = paginatedTransactions === null || paginatedTransactions === void 0 ? void 0 : paginatedTransactions.data) !== null && _paginatedTransaction !== void 0 ? _paginatedTransaction : transactionsByEmployee) !== null && _ref !== void 0 ? _ref : null;\n  }, [paginatedTransactions, transactionsByEmployee]);\n  const loadAllTransactions = useCallback(async () => {\n    setfilterbyemployee(false);\n    setIsLoading(true);\n    await employeeUtils.fetchAll();\n    setIsLoading(false);\n    await paginatedTransactionsUtils.fetchAll();\n  }, [employeeUtils, paginatedTransactionsUtils]);\n  const loadTransactionsByEmployee = useCallback(async employeeId => {\n    setfilterbyemployee(true);\n    paginatedTransactionsUtils.invalidateData();\n    await transactionsByEmployeeUtils.fetchById(employeeId);\n  }, [paginatedTransactionsUtils, transactionsByEmployeeUtils]);\n  useEffect(() => {\n    if (employees === null) {\n      loadAllTransactions();\n    }\n  }, [employees, loadAllTransactions]);\n  let moreAvailable;\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"MainContainer\",\n      children: [/*#__PURE__*/_jsxDEV(Instructions, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n        className: \"RampBreak--l\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(InputSelect, {\n        isLoading: isLoading,\n        defaultValue: EMPTY_EMPLOYEE,\n        items: employees === null ? [] : [EMPTY_EMPLOYEE, ...employees],\n        label: \"Filter by employee\",\n        loadingLabel: \"Loading employees\",\n        parseItem: item => ({\n          value: item.id,\n          label: `${item.firstName} ${item.lastName}`\n        }),\n        onChange: async newValue => {\n          if (newValue === null) {\n            return;\n          }\n\n          await loadTransactionsByEmployee(newValue.id);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"RampBreak--l\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"RampGrid\",\n        children: [/*#__PURE__*/_jsxDEV(Transactions, {\n          transactions: transactions\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), transactions !== null && !filterbyemployee && moreAvailable && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"RampButton\",\n          disabled: isLoading,\n          onClick: loadAllTransactions,\n          children: \"View More\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"Unuv74PXLgDoqzsayFviinEH4iM=\", false, function () {\n  return [useEmployees, usePaginatedTransactions, useTransactionsByEmployee];\n});\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Fragment","useCallback","useEffect","useMemo","useState","InputSelect","Instructions","Transactions","useEmployees","usePaginatedTransactions","useTransactionsByEmployee","EMPTY_EMPLOYEE","App","data","employees","employeeUtils","paginatedTransactions","moreAvailable","morePaginated","paginatedTransactionsUtils","transactionsByEmployee","transactionsByEmployeeUtils","isLoading","setIsLoading","filterbyemployee","setfilterbyemployee","transactions","loadAllTransactions","fetchAll","loadTransactionsByEmployee","employeeId","invalidateData","fetchById","item","value","id","label","firstName","lastName","newValue"],"sources":["/Users/mosesmadavaram/Downloads/ramp-fe-challenge 2/src/App.tsx"],"sourcesContent":["import { Fragment, useCallback, useEffect, useMemo, useState } from \"react\"\nimport { InputSelect } from \"./components/InputSelect\"\nimport { Instructions } from \"./components/Instructions\"\nimport { Transactions } from \"./components/Transactions\"\nimport { useEmployees } from \"./hooks/useEmployees\"\nimport { usePaginatedTransactions } from \"./hooks/usePaginatedTransactions\"\nimport { useTransactionsByEmployee } from \"./hooks/useTransactionsByEmployee\"\nimport { EMPTY_EMPLOYEE } from \"./utils/constants\"\nimport { Employee } from \"./utils/types\"\n\nexport function App() {\n  const { data: employees, ...employeeUtils } = useEmployees()\n  // @ts-ignore\n  const { data: paginatedTransactions, moreAvailable: morePaginated, ...paginatedTransactionsUtils } = usePaginatedTransactions()\n  const { data: transactionsByEmployee, ...transactionsByEmployeeUtils } = useTransactionsByEmployee()\n  const [isLoading, setIsLoading] = useState(false)\n  const [filterbyemployee, setfilterbyemployee] = useState(false)\n\n  const transactions = useMemo(\n    () => paginatedTransactions?.data ?? transactionsByEmployee ?? null,\n    [paginatedTransactions, transactionsByEmployee]\n  )\n\n  const loadAllTransactions = useCallback(async () => {\n    setfilterbyemployee(false)\n    setIsLoading(true)\n    await employeeUtils.fetchAll()\n    setIsLoading(false)\n    await paginatedTransactionsUtils.fetchAll()\n\n  }, [employeeUtils, paginatedTransactionsUtils])\n\n  const loadTransactionsByEmployee = useCallback(\n    async (employeeId: string) => {\n      setfilterbyemployee(true)\n      paginatedTransactionsUtils.invalidateData()\n      await transactionsByEmployeeUtils.fetchById(employeeId)\n    },\n    [paginatedTransactionsUtils, transactionsByEmployeeUtils]\n  )\n\n  useEffect(() => {\n    if (employees === null) {\n      loadAllTransactions()\n    }\n  }, [employees, loadAllTransactions])\n\n  let moreAvailable;\n  return (\n    <Fragment>\n      <main className=\"MainContainer\">\n        <Instructions />\n\n        <hr className=\"RampBreak--l\" />\n\n        <InputSelect<Employee>\n          isLoading={isLoading}\n          defaultValue={EMPTY_EMPLOYEE}\n          items={employees === null ? [] : [EMPTY_EMPLOYEE, ...employees]}\n          label=\"Filter by employee\"\n          loadingLabel=\"Loading employees\"\n          parseItem={(item) => ({\n            value: item.id,\n            label: `${item.firstName} ${item.lastName}`,\n          })}\n          onChange={async (newValue) => {\n            if (newValue === null) {\n              return\n            }\n\n            await loadTransactionsByEmployee(newValue.id)\n          }}\n        />\n\n        <div className=\"RampBreak--l\" />\n\n        <div className=\"RampGrid\">\n          <Transactions transactions={transactions} />\n\n          {transactions !== null && !filterbyemployee && moreAvailable  &&(\n            <button\n              className=\"RampButton\"\n              disabled={isLoading}\n              onClick={ loadAllTransactions\n              }\n            >\n              View More\n            </button>\n          )}\n        </div>\n      </main>\n    </Fragment>\n  )\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}